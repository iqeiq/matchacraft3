{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/input.coffee","bundle.js","src/main.coffee","src/player.coffee","src/scene.coffee","src/terrain.coffee","src/util.coffee","src/world.coffee"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","Input","indexOf","item","this","hasProp","hasOwnProperty","domElement","buttons","keydown","keyup","mapper","mouseEvent","ref","ref1","ref2","ref3","document","keys","listener","keyMap",8,13,16,17,18,27,32,37,38,39,40,"_this","keycode","status","key","String","fromCharCode","toLowerCase","Bacon","fromEventTarget","map","keyCode","merge","filter","charCodeAt","onValue","forEach","v","THREE","MOUSE","LEFT","RIGHT","type","button","clientX","clientY","btn","cb","push","_","remove","onMouseDown","offMouseDown","onMouseUp","offMouseUp","transform","res","bind","onDoubleClick","offDoubleClick","active","md","mu","k","results","onMouseMove","offMouseMove","offAll","ref4","off","prototype","on","allremove",2,"Main","Scene","transit","Detector","webgl","addGetWebGLMessage","renderer","WebGLRenderer","alpha","antialiasing","setSize","window","innerWidth","innerHeight","setClearColor","autoClear","sortObjects","$","append","currentScene","input","stats","Stats","setMode","style","position","left","top","body","resize","height","width","camera","aspect","updateProjectionMatrix","animate","requestAnimationFrame","begin","clear","update","end","./scene",3,"Player","extend","child","parent","ctor","constructor","__super__","superClass","x","y","z","velocity","Vector3","canJump","gravity","mode","set","lookAt","delta","translateX","translateZ","translateY","Object3D","./input",4,"OrbitScene","PLScene","World","clock","Clock","scene","PerspectiveCamera","render","fog","Fog","controls","PointerLockControls","add","getObject","world","enabled","pointerLockElement","requestPointerLock","exitPointerLock","getDelta","syncCamera","geometry","material","OrbitControls","BoxGeometry","MeshBasicMaterial","color","wireframe","mesh","Mesh","./world",5,"Terrain","util","size","heightMin","heightRange","seed","size2","rand","cell","Uint8Array","generateMesh","getType","inflate","incline","min","max","Int16Array","hmax","hmin","j","m","quality","noise","Math","console","log","BufferGeometry","MeshPhongMaterial","specular","colors","current","dir","faceNum","faceTemp","indexTemp","indices","normals","padding","vertices","d","Float32Array","Uint32Array","face","pos","ind","addAttribute","BufferAttribute","./util",6,"Utility","floor","random","randf","randRange","randArray","arr","perlin","ImprovedNoise",7,"worldHeight","terrain","light","DirectionalLight","normalize","light2","HemisphereLight","player","clone","copy","rotation","./player","./terrain"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","class Input\r\n  constructor: (@domElement = document)->\r\n    @keys = {}\r\n    @listener = {}\r\n\r\n    @keyMap =\r\n      8: 'backspace'\r\n      13: 'enter'\r\n      16: 'shift'\r\n      17: 'ctrl'\r\n      18: 'alt'\r\n      27: 'esc'\r\n      32: 'space'\r\n      37: 'left'\r\n      38: 'up'\r\n      39: 'right'\r\n      40: 'down'\r\n\r\n    mapper = (keycode, status)=>\r\n      key: @keyMap[keycode] or String.fromCharCode(keycode).toLowerCase()\r\n      status: status\r\n\r\n    keydown = Bacon.fromEventTarget(@domElement, 'keydown').map (e)=> mapper.call @, e.keyCode, true\r\n    keyup = Bacon.fromEventTarget(@domElement, 'keyup').map (e)=> mapper.call @, e.keyCode, false\r\n    keydown.merge(keyup).filter (e)->\r\n      code = e.key.charCodeAt 0\r\n      47 < code < 58 or 96 < code < 123\r\n    .onValue (e)=>\r\n      @keys[e.key] = e.status\r\n      return unless e.status \r\n      @listener[e.key]?.forEach (v)-> do v\r\n\r\n    buttons = [THREE.MOUSE.LEFT, THREE.MOUSE.RIGHT]\r\n    \r\n    mouseEvent = (type)=>\r\n      listener = {}\r\n      buttons.forEach (e)-> listener[e] = []\r\n      Bacon.fromEventTarget @domElement, type\r\n        .filter (e)-> e.button in buttons\r\n        .onValue (e)-> listener[e.button].forEach (v)-> v e.clientX, e.clientY\r\n      [ \r\n        (btn, cb)-> listener[btn]?.push cb,\r\n        (btn, cb)-> _.remove listener[btn], (v)-> if cb? then v is cb else true\r\n      ]\r\n\r\n    [@onMouseDown, @offMouseDown] = mouseEvent 'mousedown'\r\n    [@onMouseUp, @offMouseUp] = mouseEvent 'mouseup'\r\n    [@onDoubleClick, @offDoubleClick] = _.transform mouseEvent('dblclick'), (res, e)-> res.push e.bind @, THREE.MOUSE.LEFT\r\n\r\n    [@onMouseMove, @offMouseMove] = do =>\r\n      listener = {}\r\n      active = {}\r\n      buttons.forEach (e)-> \r\n        active[e] = false\r\n        listener[e] = []\r\n      md = Bacon.fromEventTarget(@domElement, 'mousedown').map (e)-> [e.button, true]\r\n      mu = Bacon.fromEventTarget(@domElement, 'mouseup').map (e)-> [e.button, false]\r\n      md.merge(mu).onValue (e)-> active[e[0]] = e[1] if active[e[0]]?\r\n      Bacon.fromEventTarget(@domElement, 'mousemove').onValue (e)->\r\n        for own k, v of listener\r\n          v.forEach (u)-> u e.clientX, e.clientY if active[k] \r\n      [\r\n        (btn, cb)-> listener[btn]?.push cb,\r\n        (btn, cb)-> _.remove listener[btn], (v)-> if cb? then v is cb else true\r\n      ]\r\n\r\n    @offAll = =>\r\n      buttons.forEach (v)=>\r\n        @offMouseDown v\r\n        @offMouseUp v\r\n        @offMouseMove v\r\n      @offDoubleClick()\r\n      @off k for own k, v of @listener\r\n        \r\n\r\n  on: (key, cb)->\r\n    return @listener[key].push cb if @listener[key]\r\n    @listener[key] = [cb]\r\n\r\n  off: (key, cb = allremove)->\r\n    _.remove @listener[key], (v)-> v is cb\r\n\r\n\r\nmodule.exports = Input",null,"'use strict'\r\n\r\nScene = require './scene'\r\n\r\n\r\nclass Main\r\n  constructor: -> \r\n    Detector.addGetWebGLMessage() unless Detector.webgl\r\n\r\n    @renderer = new THREE.WebGLRenderer\r\n        alpha: true\r\n        antialiasing: true\r\n    @renderer.setSize window.innerWidth, window.innerHeight\r\n    @renderer.setClearColor 0xa0d8ef, 1\r\n    @renderer.autoClear = false\r\n    @renderer.sortObjects = true\r\n    $('#world').append @renderer.domElement\r\n\r\n    @currentScene = undefined\r\n    transit = (s)=>\r\n      @currentScene.input.offAll()\r\n      @currentScene = s\r\n\r\n    @currentScene = new Scene @renderer, transit\r\n    \r\n    @stats = new Stats\r\n    @stats.setMode 0  # 0: fps, 1: ms, 2: mb\r\n    @stats.domElement.style.position = 'absolute'\r\n    @stats.domElement.style.left = '0px'\r\n    @stats.domElement.style.top = '0px'\r\n    $(document.body).append @stats.domElement\r\n\r\n    $(window).resize =>\r\n      width = window.innerWidth\r\n      height = window.innerHeight\r\n      @renderer.setSize width, height\r\n      @currentScene.camera.aspect = width / height\r\n      @currentScene.camera.updateProjectionMatrix()\r\n\r\n  animate: ->\r\n    requestAnimationFrame => do @animate\r\n    @stats.begin()\r\n    @renderer.clear()\r\n    @currentScene?.update()\r\n    @stats.end()\r\n\r\n\r\n$ -> do new Main().animate\r\n","Input = require './input'\r\n\r\nclass Player extends THREE.Object3D\r\n  constructor: (x, y, z)->\r\n    super()\r\n    @velocity = new THREE.Vector3 0, 0, 0\r\n    @canJump = false\r\n    @gravity = true\r\n    @height = 1.7\r\n    @width = 0.8\r\n    @mode = 1\r\n    @position.set x, y, z\r\n    @lookAt new THREE.Vector3(0, 0, 0)\r\n\r\n  update: (delta)->\r\n\r\n    if @gravity\r\n      @velocity.y -= 9.8 * 2.7 * delta\r\n\r\n    @translateX @velocity.x * delta\r\n    @translateZ @velocity.z * delta\r\n    @translateY @velocity.y * delta\r\n\r\n\r\nmodule.exports = Player\r\n","Input = require './input'\r\nWorld = require './world'\r\n\r\nclass Scene\r\n  constructor: (@renderer, @transit)->\r\n    @clock = new THREE.Clock\r\n    @input = new Input document.body\r\n    @scene = new THREE.Scene\r\n    width = window.innerWidth\r\n    height = window.innerHeight\r\n    @camera = new THREE.PerspectiveCamera 72, width / height, 1, 1000\r\n    #@camera = new THREE.OrthographicCamera width / - 2, width / 2, height / 2, height / - 2, 1, 1000 \r\n  \r\n  update: ->\r\n    @renderer.render @scene, @camera\r\n\r\nclass PLScene extends Scene\r\n  constructor: (@renderer, @transit)-> \r\n    super @renderer, @transit\r\n    @scene.fog = new THREE.Fog 0xffffff, 100, 1000\r\n    #@camera.position.z = -50\r\n    #@camera.position.x = 50\r\n    #@camera.position.y = 100\r\n    @controls = new THREE.PointerLockControls @camera\r\n    @scene.add @controls.getObject()\r\n\r\n    @world = new World @scene, 128\r\n\r\n    @input.onMouseDown THREE.MOUSE.LEFT, =>\r\n      @controls.enabled = true\r\n      unless document.pointerLockElement\r\n        document.body.requestPointerLock()\r\n    \r\n    @input.onDoubleClick =>\r\n      @controls.enabled = false\r\n      if document.pointerLockElement\r\n        document.exitPointerLock()\r\n      #console.log \"transit OrbitScene\"\r\n      #@transit new OrbitScene @renderer, @transit\r\n    \r\n    #@input.onMouseDown THREE.MOUSE.RIGHT, =>\r\n    #  console.log \"transit PLScene\"\r\n    #  @transit new PLScene @renderer, @transit\r\n\r\n\r\n  update: ->\r\n    if @controls.enabled \r\n      @world.update @clock.getDelta()\r\n      @world.syncCamera @controls\r\n    super()\r\n    \r\n\r\nclass OrbitScene extends Scene\r\n  constructor: (@renderer, @transit)-> \r\n    super @renderer, @transit\r\n    @camera.position.z = 100\r\n    @controls = new THREE.OrbitControls @camera\r\n    \r\n    geometry = new THREE.BoxGeometry 20, 20, 20\r\n    material = new THREE.MeshBasicMaterial\r\n        color: 0xff0000\r\n        wireframe: true\r\n    @mesh = new THREE.Mesh geometry, material\r\n    @scene.add @mesh\r\n    \r\n\r\n  update: ->\r\n    @controls.update()\r\n      \r\n\r\nmodule.exports = PLScene","util = require './util'\r\n\r\nclass Terrain\r\n  constructor: (@size, @heightMin = 0, @heightRange = 128, @seed = undefined)->\r\n    @size2 = @size * @size\r\n    @seed ?= util.rand 1000000\r\n    @cell = new Uint8Array @size2 * @heightRange\r\n    @generateMesh 32, 0.5, @heightMin, @heightMin + @heightRange - 1\r\n\r\n  getType: (x, y, z)->\r\n    return 0 if x < 0 or x > @size - 1\r\n    return 0 if z < 0 or z > @size - 1\r\n    return 0 if y < @heightMin or y > @heightMin + @heightRange - 1\r\n    @cell[x + z * @size + y * @size2]\r\n\r\n  generateMesh: (inflate, incline, min, max)->\r\n    height = new Int16Array @size * @size\r\n    \r\n    do =>\r\n      hmax = min\r\n      hmin = max\r\n      \r\n      for i in [0...@size2]\r\n        x = (i % @size + 2) / 2\r\n        z = (((i / @size) | 0) + 3) / 2\r\n        quality = 2  \r\n        for k in [0...4]\r\n          height[i] += util.noise(x / quality, z / quality, @seed) * quality\r\n          quality *= 4\r\n        height[i] = ~~Math.max min, Math.min(max, height[i] * incline + inflate)\r\n        for j in [0..height[i]]\r\n          @cell[i + j * @size2] = 1\r\n        hmax = Math.max hmax, height[i]\r\n        hmin = Math.min hmin, height[i]\r\n        \r\n      console.log \"height: [#{hmin}, #{hmax}]\"\r\n\r\n    @geometry = new THREE.BufferGeometry\r\n    @material = new THREE.MeshPhongMaterial\r\n        color: 0x864815\r\n        specular: 0x111111\r\n\r\n    do =>\r\n      faceTemp = [\r\n        [ [0.0, 1.0, 0.0], [0.0, 1.0, 1.0], [1.0, 1.0, 0.0], [1.0, 1.0, 1.0] ],\r\n        [ [0.0, 1.0, 0.0], [0.0, 0.0, 0.0], [0.0, 1.0, 1.0], [0.0, 0.0, 1.0] ],\r\n        [ [1.0, 1.0, 1.0], [1.0, 0.0, 1.0], [1.0, 1.0, 0.0], [1.0, 0.0, 0.0] ],\r\n        [ [1.0, 1.0, 0.0], [1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 0.0] ],\r\n        [ [0.0, 1.0, 1.0], [0.0, 0.0, 1.0], [1.0, 1.0, 1.0], [1.0, 0.0, 1.0] ],\r\n        [ [1.0, 0.0, 1.0], [0.0, 0.0, 1.0], [1.0, 0.0, 0.0], [0.0, 0.0, 0.0] ]\r\n      ]\r\n      indexTemp = [ [0, 1, 2], [2, 1, 3] ]\r\n      dir = [[0,1,0], [-1,0,0], [1,0,0], [0,0,-1], [0,0,1], [0,-1,0]]\r\n\r\n      #compute visible\r\n      faceNum = 0\r\n      do =>\r\n        @cell.forEach (v, i)=>\r\n          return if v is 0\r\n          x = i % @size\r\n          z = ((i % @size2) / @size) | 0\r\n          y = (i / @size2) | 0\r\n          dir.forEach (d)=>\r\n            type = @getType x + d[0], y + d[1], z + d[2]\r\n            if type is 0\r\n              faceNum++\r\n\r\n      console.log \"faceNum: #{faceNum}\"\r\n\r\n      vertices = new Float32Array faceNum * 4 * 3\r\n      indices = new Uint32Array faceNum * 2 * 3\r\n      normals = new Float32Array faceNum * 4 * 3\r\n      colors = new Float32Array faceNum * 4 * 3\r\n      #uvs = new Float32Array faceNum * 4 * 2 \r\n      current = 0\r\n      padding = 0.00001\r\n      \r\n      @cell.forEach (v, i)=>\r\n        return if v is 0\r\n        x = i % @size\r\n        z = ((i % @size2) / @size) | 0\r\n        y = (i / @size2) | 0\r\n        dir.forEach (d, face)=>\r\n          type = @getType x + d[0], y + d[1], z + d[2]\r\n          if type is 0\r\n            faceTemp[face].forEach (pos, o)->\r\n              vertices[ current*12 + o*3 + 0 ] = pos[0] + x + (if pos[0] < 0.5 then padding else -padding)\r\n              vertices[ current*12 + o*3 + 1 ] = pos[1] + y + (if pos[1] < 0.5 then padding else -padding)\r\n              vertices[ current*12 + o*3 + 2 ] = pos[2] + z + (if pos[2] < 0.5 then padding else -padding)\r\n    \r\n              normals[ current*12 + o*3 + 0 ] = if face is 1 then -1.0 else (if face is 2 then 1.0 else 0.0)\r\n              normals[ current*12 + o*3 + 1 ] = if face is 5 then -1.0 else (if face is 0 then 1.0 else 0.0)\r\n              normals[ current*12 + o*3 + 2 ] = if face is 3 then -1.0 else (if face is 4 then 1.0 else 0.0)\r\n    \r\n              colors[ current*12 + o*3 + 0 ] = 1.0\r\n              colors[ current*12 + o*3 + 1 ] = 1.0\r\n              colors[ current*12 + o*3 + 2 ] = 1.0\r\n    \r\n              #uvs[ current*8 + o*2 + 0 ] = 0.0\r\n              #uvs[ current*8 + o*2 + 1 ] = 0.0\r\n\r\n            indexTemp.forEach (ind, o)->\r\n              indices[ current*6 + o*3 + 0 ] = ind[0] + current*4\r\n              indices[ current*6 + o*3 + 1 ] = ind[1] + current*4\r\n              indices[ current*6 + o*3 + 2 ] = ind[2] + current*4\r\n\r\n            current++\r\n\r\n      @geometry.addAttribute \"position\", new THREE.BufferAttribute(vertices, 3)\r\n      @geometry.addAttribute \"index\", new THREE.BufferAttribute(indices, 3)\r\n      @geometry.addAttribute \"normal\", new THREE.BufferAttribute(normals, 3)\r\n      @geometry.addAttribute \"color\", new THREE.BufferAttribute(colors, 3)\r\n      #@geometry.addAttribute \"uv\", new THREE.BufferAttribute(uvs, 2)\r\n\r\n    @mesh = new THREE.Mesh @geometry, @material\r\n\r\n\r\n\r\nmodule.exports = Terrain\r\n","class Utility\r\n  @rand = (n)->\r\n    Math.floor Math.random() * n\r\n\r\n  @randf = (n)->\r\n    Math.random() * n\r\n\r\n  @randRange = (min, max)->\r\n    Math.floor(Math.random() * (max - min + 1)) + min\r\n  \r\n  @randArray = (arr)->\r\n    arr[Math.floor Math.random() * arr.length]\r\n\r\n  @noise = do ->\r\n    perlin = new ImprovedNoise\r\n    (x, y, z)-> perlin.noise x, y, z\r\n\r\n\r\nmodule.exports = Utility","Terrain = require './terrain'\r\nPlayer = require './player'\r\n\r\nclass World\r\n  constructor: (@scene, @size)->\r\n    worldHeight = 128\r\n    @terrain = new Terrain @size, 0, worldHeight\r\n    @scene.add @terrain.mesh\r\n\r\n    @light = new THREE.DirectionalLight 0xffffff, 0.6\r\n    @light.position.set(0.5, 0.7, 0.3).normalize()\r\n    @scene.add @light\r\n\r\n    @light2 = new THREE.HemisphereLight 0xffffff, 0x111111, 0.3\r\n    @scene.add @light2\r\n    \r\n    #@scene.add new THREE.AmbientLight 0x404040\r\n\r\n    @player = new Player @size / 2, worldHeight / 2, @size / 2\r\n\r\n\r\n  update: (delta)->\r\n    @player.update delta\r\n\r\n\r\n  syncCamera: (controls)->\r\n    pos = @player.position.clone().add new THREE.Vector3(0, @player.height - 0.6, 0)\r\n    controls.getObject().position.copy pos \r\n    @player.rotation.copy controls.getObject().rotation\r\n\r\n\r\nmodule.exports = World\r\n"],"sourceRoot":"./src"}