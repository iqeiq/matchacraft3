{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/input.coffee","bundle.js","src/main.coffee","src/mob.coffee","src/scene.coffee","src/terrain.coffee","src/util.coffee","src/world.coffee"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","Input","indexOf","item","this","hasProp","hasOwnProperty","domElement","buttons","keydown","keyup","mapper","mouseEvent","ref","ref1","ref2","ref3","document","keys","listener","keyMap",8,13,16,17,18,27,32,37,38,39,40,"_this","keycode","status","key","String","fromCharCode","toLowerCase","Bacon","fromEventTarget","map","keyCode","merge","filter","charCodeAt","onValue","forEach","v","THREE","MOUSE","LEFT","RIGHT","type","button","clientX","clientY","btn","cb","push","_","remove","onMouseDown","offMouseDown","onMouseUp","offMouseUp","transform","res","bind","onDoubleClick","offDoubleClick","active","md","mu","k","results","onMouseMove","offMouseMove","offAll","ref4","off","prototype","on","allremove",2,"Main","Scene","transit","Detector","webgl","addGetWebGLMessage","renderer","WebGLRenderer","alpha","antialiasing","setSize","window","innerWidth","innerHeight","setClearColor","autoClear","sortObjects","$","append","currentScene","input","stats","Stats","setMode","style","position","left","top","body","resize","height","width","camera","aspect","updateProjectionMatrix","animate","requestAnimationFrame","begin","clear","update","end","./scene",3,"Mob","extend","child","parent","ctor","constructor","__super__","superClass","Object3D",4,"OrbitScene","PLScene","World","clock","Clock","scene","PerspectiveCamera","render","z","x","y","controls","OrbitControls","world","getDelta","geometry","material","PointerLockControls","add","getObject","BoxGeometry","MeshBasicMaterial","color","wireframe","mesh","Mesh","console","log","enabled","pointerLockElement","requestPointerLock","exitPointerLock","./input","./mob","./world",5,"Terrain","util","size","seed","size2","rand","heightMin","heightRange","cell","Uint8Array","generateMesh","getType","inflate","incline","min","max","Int16Array","hmax","hmin","apply","quality","noise","Math","w","j","BufferGeometry","MeshPhongMaterial","specular","colors","current","dir","faceNum","faceTemp","indexTemp","indices","normals","padding","vertices","d","Float32Array","Uint32Array","face","pos","ind","addAttribute","BufferAttribute","./util",6,"Utility","floor","random","randf","randRange","randArray","arr","perlin","ImprovedNoise",7,"terrain","light","DirectionalLight","set","normalize","light2","HemisphereLight","delta","./terrain"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","class Input\r\n  constructor: (@domElement = document)->\r\n    @keys = {}\r\n    @listener = {}\r\n\r\n    @keyMap =\r\n      8: 'backspace'\r\n      13: 'enter'\r\n      16: 'shift'\r\n      17: 'ctrl'\r\n      18: 'alt'\r\n      27: 'esc'\r\n      32: 'space'\r\n      37: 'left'\r\n      38: 'up'\r\n      39: 'right'\r\n      40: 'down'\r\n\r\n    mapper = (keycode, status)=>\r\n      key: @keyMap[keycode] or String.fromCharCode(keycode).toLowerCase()\r\n      status: status\r\n\r\n    keydown = Bacon.fromEventTarget(@domElement, 'keydown').map (e)=> mapper.call @, e.keyCode, true\r\n    keyup = Bacon.fromEventTarget(@domElement, 'keyup').map (e)=> mapper.call @, e.keyCode, false\r\n    keydown.merge(keyup).filter (e)->\r\n      code = e.key.charCodeAt 0\r\n      47 < code < 58 or 96 < code < 123\r\n    .onValue (e)=>\r\n      @keys[e.key] = e.status\r\n      return unless e.status \r\n      @listener[e.key]?.forEach (v)-> do v\r\n\r\n    buttons = [THREE.MOUSE.LEFT, THREE.MOUSE.RIGHT]\r\n    \r\n    mouseEvent = (type)=>\r\n      listener = {}\r\n      buttons.forEach (e)-> listener[e] = []\r\n      Bacon.fromEventTarget @domElement, type\r\n        .filter (e)-> e.button in buttons\r\n        .onValue (e)-> listener[e.button].forEach (v)-> v e.clientX, e.clientY\r\n      [ \r\n        (btn, cb)-> listener[btn]?.push cb,\r\n        (btn, cb)-> _.remove listener[btn], (v)-> if cb? then v is cb else true\r\n      ]\r\n\r\n    [@onMouseDown, @offMouseDown] = mouseEvent 'mousedown'\r\n    [@onMouseUp, @offMouseUp] = mouseEvent 'mouseup'\r\n    [@onDoubleClick, @offDoubleClick] = _.transform mouseEvent('dblclick'), (res, e)-> res.push e.bind @, THREE.MOUSE.LEFT\r\n\r\n    [@onMouseMove, @offMouseMove] = do =>\r\n      listener = {}\r\n      active = {}\r\n      buttons.forEach (e)-> \r\n        active[e] = false\r\n        listener[e] = []\r\n      md = Bacon.fromEventTarget(@domElement, 'mousedown').map (e)-> [e.button, true]\r\n      mu = Bacon.fromEventTarget(@domElement, 'mouseup').map (e)-> [e.button, false]\r\n      md.merge(mu).onValue (e)-> active[e[0]] = e[1] if active[e[0]]?\r\n      Bacon.fromEventTarget(@domElement, 'mousemove').onValue (e)->\r\n        for own k, v of listener\r\n          v.forEach (u)-> u e.clientX, e.clientY if active[k] \r\n      [\r\n        (btn, cb)-> listener[btn]?.push cb,\r\n        (btn, cb)-> _.remove listener[btn], (v)-> if cb? then v is cb else true\r\n      ]\r\n\r\n    @offAll = =>\r\n      buttons.forEach (v)=>\r\n        @offMouseDown v\r\n        @offMouseUp v\r\n        @offMouseMove v\r\n      @offDoubleClick()\r\n      @off k for own k, v of @listener\r\n        \r\n\r\n  on: (key, cb)->\r\n    return @listener[key].push cb if @listener[key]\r\n    @listener[key] = [cb]\r\n\r\n  off: (key, cb = allremove)->\r\n    _.remove @listener[key], (v)-> v is cb\r\n\r\n\r\nmodule.exports = Input",null,"'use strict'\r\n\r\nScene = require './scene'\r\n\r\n\r\nclass Main\r\n  constructor: -> \r\n    Detector.addGetWebGLMessage() unless Detector.webgl\r\n\r\n    @renderer = new THREE.WebGLRenderer\r\n        alpha: true\r\n        antialiasing: true\r\n    @renderer.setSize window.innerWidth, window.innerHeight\r\n    @renderer.setClearColor 0xa0d8ef, 1\r\n    @renderer.autoClear = false\r\n    @renderer.sortObjects = true\r\n    $('#world').append @renderer.domElement\r\n\r\n    @currentScene = undefined\r\n    transit = (s)=>\r\n      @currentScene.input.offAll()\r\n      @currentScene = s\r\n\r\n    @currentScene = new Scene @renderer, transit\r\n    \r\n    @stats = new Stats\r\n    @stats.setMode 0  # 0: fps, 1: ms, 2: mb\r\n    @stats.domElement.style.position = 'absolute'\r\n    @stats.domElement.style.left = '0px'\r\n    @stats.domElement.style.top = '0px'\r\n    $(document.body).append @stats.domElement\r\n\r\n    $(window).resize =>\r\n      width = window.innerWidth\r\n      height = window.innerHeight\r\n      @renderer.setSize width, height\r\n      @currentScene.camera.aspect = width / height\r\n      @currentScene.camera.updateProjectionMatrix()\r\n\r\n  animate: ->\r\n    requestAnimationFrame => do @animate\r\n    @stats.begin()\r\n    @renderer.clear()\r\n    @currentScene?.update()\r\n    @stats.end()\r\n\r\n\r\n$ -> do new Main().animate\r\n","\r\nclass Mob extends THREE.Object3D\r\n  constructor: ->\r\n\r\n\r\n  update: ->\r\n    \r\n\r\n\r\n\r\n\r\nmodule.exports = Mob","Input = require './input'\r\nMob = require './mob'\r\nWorld = require './world'\r\n\r\nclass Scene\r\n  constructor: (@renderer, @transit)->\r\n    @clock = new THREE.Clock\r\n    @input = new Input document.body\r\n    @scene = new THREE.Scene\r\n    width = window.innerWidth\r\n    height = window.innerHeight\r\n    @camera = new THREE.PerspectiveCamera 72, width / height, 1, 1000\r\n    #@camera = new THREE.OrthographicCamera width / - 2, width / 2, height / 2, height / - 2, 1, 1000 \r\n  \r\n  update: ->\r\n    @renderer.render @scene, @camera\r\n\r\nclass OrbitScene extends Scene\r\n  constructor: (@renderer, @transit)-> \r\n    super @renderer, @transit\r\n    #@scene.fog = new THREE.Fog 0xffffff, 100, 1000\r\n    @camera.position.z = -50\r\n    @camera.position.x = 50\r\n    @camera.position.y = 100\r\n    @controls = new THREE.OrbitControls @camera\r\n\r\n    @world = new World @scene, 128\r\n    \r\n    #@input.onMouseDown THREE.MOUSE.RIGHT, =>\r\n    #  console.log \"transit PLScene\"\r\n    #  @transit new PLScene @renderer, @transit\r\n\r\n\r\n  update: ->\r\n    @world.update @clock.getDelta()\r\n    @controls.update()\r\n    super()\r\n    \r\n\r\nclass PLScene extends Scene\r\n  constructor: (@renderer, @transit)-> \r\n    super @renderer, @transit\r\n    @camera.position.z = 100\r\n    @controls = new THREE.PointerLockControls @camera\r\n    @scene.add @controls.getObject()\r\n\r\n    geometry = new THREE.BoxGeometry 20, 20, 20\r\n    material = new THREE.MeshBasicMaterial\r\n        color: 0xff0000\r\n        wireframe: true\r\n    @mesh = new THREE.Mesh geometry, material\r\n    @scene.add @mesh\r\n\r\n    @input.onMouseDown THREE.MOUSE.LEFT, =>\r\n      console.log \"poyo\"\r\n      @controls.enabled = true\r\n      unless document.pointerLockElement\r\n        document.body.requestPointerLock()\r\n    \r\n    @input.onDoubleClick =>\r\n      @controls.enabled = false\r\n      if document.pointerLockElement\r\n        document.exitPointerLock()\r\n      console.log \"transit OrbitScene\"\r\n      @transit new OrbitScene @renderer, @transit\r\n      \r\n\r\nmodule.exports = OrbitScene","util = require './util'\r\n\r\nclass Terrain\r\n  constructor: (@size, @seed)->\r\n    @size2 = @size * @size\r\n    @seed ?= util.rand 1000000\r\n    @heightMin = 0\r\n    @heightRange = 128\r\n    @cell = new Uint8Array @size2 * @heightRange\r\n    @generateMesh 32, 0.5, @heightMin, @heightMin + @heightRange - 1\r\n\r\n  getType: (x, y, z)->\r\n    return 0 if x < 0 or x > @size - 1\r\n    return 0 if z < 0 or z > @size - 1\r\n    return 0 if y < @heightMin or y > @heightMin + @heightRange - 1\r\n    @cell[x + z * @size + y * @size2]\r\n\r\n  generateMesh: (inflate, incline, min, max)->\r\n    height = new Int16Array @size * @size\r\n    \r\n    do =>\r\n      hmax = min\r\n      hmin = max\r\n      \r\n      [0...@size2].forEach (v, i)=>\r\n        x = (i % @size + 2) / 2\r\n        z = (((i / @size) | 0) + 3) / 2\r\n        quality = 2  \r\n        [0...4].forEach (u, k)=>\r\n          height[i] += util.noise(x / quality, z / quality, @seed) * quality\r\n          quality *= 4\r\n        height[i] = ~~Math.max min, Math.min(max, height[i] * incline + inflate)\r\n        [0..height[i]].forEach (w, j)=>\r\n          @cell[i + j * @size2] = 1\r\n        hmax = Math.max hmax, height[i]\r\n        hmin = Math.min hmin, height[i]\r\n        \r\n      console.log \"height: [#{hmin}, #{hmax}]\"\r\n\r\n    @geometry = new THREE.BufferGeometry\r\n    @material = new THREE.MeshPhongMaterial\r\n        color: 0x864815\r\n        specular: 0x111111\r\n\r\n    do =>\r\n      faceTemp = [\r\n        [ [0.0, 1.0, 0.0], [0.0, 1.0, 1.0], [1.0, 1.0, 0.0], [1.0, 1.0, 1.0] ],\r\n        [ [0.0, 1.0, 0.0], [0.0, 0.0, 0.0], [0.0, 1.0, 1.0], [0.0, 0.0, 1.0] ],\r\n        [ [1.0, 1.0, 1.0], [1.0, 0.0, 1.0], [1.0, 1.0, 0.0], [1.0, 0.0, 0.0] ],\r\n        [ [1.0, 1.0, 0.0], [1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 0.0] ],\r\n        [ [0.0, 1.0, 1.0], [0.0, 0.0, 1.0], [1.0, 1.0, 1.0], [1.0, 0.0, 1.0] ],\r\n        [ [1.0, 0.0, 1.0], [0.0, 0.0, 1.0], [1.0, 0.0, 0.0], [0.0, 0.0, 0.0] ]\r\n      ]\r\n      indexTemp = [ [0, 1, 2], [2, 1, 3] ]\r\n      dir = [[0,1,0], [-1,0,0], [1,0,0], [0,0,-1], [0,0,1], [0,-1,0]]\r\n\r\n      #compute visible\r\n      faceNum = 0\r\n      do =>\r\n        @cell.forEach (v, i)=>\r\n          return if v is 0\r\n          x = i % @size\r\n          z = ((i % @size2) / @size) | 0\r\n          y = (i / @size2) | 0\r\n          dir.forEach (d)=>\r\n            type = @getType x + d[0], y + d[1], z + d[2]\r\n            if type is 0\r\n              faceNum++\r\n\r\n      console.log \"faceNum: #{faceNum}\"\r\n\r\n      vertices = new Float32Array faceNum * 4 * 3\r\n      indices = new Uint32Array faceNum * 2 * 3\r\n      normals = new Float32Array faceNum * 4 * 3\r\n      colors = new Float32Array faceNum * 4 * 3\r\n      #uvs = new Float32Array faceNum * 4 * 2 \r\n      current = 0\r\n      padding = 0.00001\r\n      \r\n      \r\n      @cell.forEach (v, i)=>\r\n        return if v is 0\r\n        x = i % @size\r\n        z = ((i % @size2) / @size) | 0\r\n        y = (i / @size2) | 0\r\n        dir.forEach (d, face)=>\r\n          type = @getType x + d[0], y + d[1], z + d[2]\r\n          if type is 0\r\n            faceTemp[face].forEach (pos, o)->\r\n              vertices[ current*12 + o*3 + 0 ] = pos[0] + x + (if pos[0] < 0.5 then padding else -padding)\r\n              vertices[ current*12 + o*3 + 1 ] = pos[1] + y + (if pos[1] < 0.5 then padding else -padding)\r\n              vertices[ current*12 + o*3 + 2 ] = pos[2] + z + (if pos[2] < 0.5 then padding else -padding)\r\n    \r\n              normals[ current*12 + o*3 + 0 ] = if face is 1 then -1.0 else (if face is 2 then 1.0 else 0.0)\r\n              normals[ current*12 + o*3 + 1 ] = if face is 5 then -1.0 else (if face is 0 then 1.0 else 0.0)\r\n              normals[ current*12 + o*3 + 2 ] = if face is 3 then -1.0 else (if face is 4 then 1.0 else 0.0)\r\n    \r\n              colors[ current*12 + o*3 + 0 ] = 1.0\r\n              colors[ current*12 + o*3 + 1 ] = 1.0\r\n              colors[ current*12 + o*3 + 2 ] = 1.0\r\n    \r\n              #uvs[ current*8 + o*2 + 0 ] = 0.0\r\n              #uvs[ current*8 + o*2 + 1 ] = 0.0\r\n\r\n            indexTemp.forEach (ind, o)->\r\n              indices[ current*6 + o*3 + 0 ] = ind[0] + current*4\r\n              indices[ current*6 + o*3 + 1 ] = ind[1] + current*4\r\n              indices[ current*6 + o*3 + 2 ] = ind[2] + current*4\r\n\r\n            current++\r\n\r\n      @geometry.addAttribute \"position\", new THREE.BufferAttribute(vertices, 3)\r\n      @geometry.addAttribute \"index\", new THREE.BufferAttribute(indices, 3)\r\n      @geometry.addAttribute \"normal\", new THREE.BufferAttribute(normals, 3)\r\n      @geometry.addAttribute \"color\", new THREE.BufferAttribute(colors, 3)\r\n      #@geometry.addAttribute \"uv\", new THREE.BufferAttribute(uvs, 2)\r\n\r\n    @mesh = new THREE.Mesh @geometry, @material\r\n\r\n\r\n\r\nmodule.exports = Terrain\r\n","class Utility\r\n  @rand = (n)->\r\n    Math.floor Math.random() * n\r\n\r\n  @randf = (n)->\r\n    Math.random() * n\r\n\r\n  @randRange = (min, max)->\r\n    Math.floor(Math.random() * (max - min + 1)) + min\r\n  \r\n  @randArray = (arr)->\r\n    arr[Math.floor Math.random() * arr.length]\r\n\r\n  @noise = do ->\r\n    perlin = new ImprovedNoise\r\n    (x, y, z)-> perlin.noise x, y, z\r\n\r\n\r\nmodule.exports = Utility","Terrain = require './terrain'\r\n\r\nclass World\r\n  constructor: (@scene, @size)->\r\n    @terrain = new Terrain @size\r\n    @scene.add @terrain.mesh\r\n\r\n    @light = new THREE.DirectionalLight 0xffffff, 0.6\r\n    @light.position.set(0.5, 0.7, 0.3).normalize()\r\n    @scene.add @light\r\n\r\n    @light2 = new THREE.HemisphereLight 0xffffff, 0x111111, 0.3\r\n    @scene.add @light2\r\n    \r\n    #@scene.add new THREE.AmbientLight 0x404040\r\n\r\n\r\n  update: (delta)->\r\n\r\n\r\nmodule.exports = World\r\n"],"sourceRoot":"./src"}