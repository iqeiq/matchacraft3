{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/input.coffee","src/main.coffee","src/mob.coffee","src/scene.coffee","src/terrain.coffee","src/util.coffee","src/world.coffee"],"names":[],"mappings":"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","file":"bundle.js","sourceRoot":"./src","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","class Input\r\n  constructor: (@domElement = document)->\r\n    @keys = {}\r\n    @listener = {}\r\n\r\n    @keyMap =\r\n      8: 'backspace'\r\n      13: 'enter'\r\n      16: 'shift'\r\n      17: 'ctrl'\r\n      18: 'alt'\r\n      27: 'esc'\r\n      32: 'space'\r\n      37: 'left'\r\n      38: 'up'\r\n      39: 'right'\r\n      40: 'down'\r\n\r\n    mapper = (keycode, status)=>\r\n      key: @keyMap[keycode] or String.fromCharCode(keycode).toLowerCase()\r\n      status: status\r\n\r\n    keydown = Bacon.fromEventTarget(@domElement, 'keydown').map (e)=> mapper.call @, e.keyCode, true\r\n    keyup = Bacon.fromEventTarget(@domElement, 'keyup').map (e)=> mapper.call @, e.keyCode, false\r\n    keydown.merge(keyup).filter (e)->\r\n      code = e.key.charCodeAt 0\r\n      47 < code < 58 or 96 < code < 123\r\n    .onValue (e)=>\r\n      @keys[e.key] = e.status\r\n      return unless e.status \r\n      @listener[e.key]?.forEach (v)-> do v\r\n\r\n    buttons = [THREE.MOUSE.LEFT, THREE.MOUSE.RIGHT]\r\n    \r\n    mouseEvent = (type)=>\r\n      listener = {}\r\n      buttons.forEach (e)-> listener[e] = []\r\n      Bacon.fromEventTarget @domElement, type\r\n        .filter (e)-> e.button in buttons\r\n        .onValue (e)-> listener[e.button].forEach (v)-> v e.clientX, e.clientY\r\n      [ \r\n        (btn, cb)-> listener[btn]?.push cb,\r\n        (btn, cb)-> _.remove listener[btn], (v)-> if cb? then v is cb else true\r\n      ]\r\n\r\n    [@onMouseDown, @offMouseDown] = mouseEvent 'mousedown'\r\n    [@onMouseUp, @offMouseUp] = mouseEvent 'mouseup'\r\n    [@onDoubleClick, @offDoubleClick] = _.transform mouseEvent('dblclick'), (res, e)-> res.push e.bind @, THREE.MOUSE.LEFT\r\n\r\n    [@onMouseMove, @offMouseMove] = do =>\r\n      listener = {}\r\n      active = {}\r\n      buttons.forEach (e)-> \r\n        active[e] = false\r\n        listener[e] = []\r\n      md = Bacon.fromEventTarget(@domElement, 'mousedown').map (e)-> [e.button, true]\r\n      mu = Bacon.fromEventTarget(@domElement, 'mouseup').map (e)-> [e.button, false]\r\n      md.merge(mu).onValue (e)-> active[e[0]] = e[1] if active[e[0]]?\r\n      Bacon.fromEventTarget(@domElement, 'mousemove').onValue (e)->\r\n        for own k, v of listener\r\n          v.forEach (u)-> u e.clientX, e.clientY if active[k] \r\n      [\r\n        (btn, cb)-> listener[btn]?.push cb,\r\n        (btn, cb)-> _.remove listener[btn], (v)-> if cb? then v is cb else true\r\n      ]\r\n\r\n    @offAll = =>\r\n      buttons.forEach (v)=>\r\n        @offMouseDown v\r\n        @offMouseUp v\r\n        @offMouseMove v\r\n      @offDoubleClick()\r\n      @off k for own k, v of @listener\r\n        \r\n\r\n  on: (key, cb)->\r\n    return @listener[key].push cb if @listener[key]\r\n    @listener[key] = [cb]\r\n\r\n  off: (key, cb = allremove)->\r\n    _.remove @listener[key], (v)-> v is cb\r\n\r\n\r\nmodule.exports = Input","'use strict'\r\n\r\nScene = require './scene'\r\n\r\n\r\nclass Main\r\n  constructor: -> \r\n    Detector.addGetWebGLMessage() unless Detector.webgl\r\n\r\n    @renderer = new THREE.WebGLRenderer\r\n        alpha: true\r\n        antialiasing: true\r\n    @renderer.setSize window.innerWidth, window.innerHeight\r\n    @renderer.setClearColor 0xa0d8ef, 1\r\n    @renderer.autoClear = false\r\n    @renderer.sortObjects = true\r\n    $('#world').append @renderer.domElement\r\n\r\n    @currentScene = undefined\r\n    transit = (s)=>\r\n      @currentScene.input.offAll()\r\n      @currentScene = s\r\n\r\n    @currentScene = new Scene @renderer, transit\r\n    \r\n    @stats = new Stats\r\n    @stats.setMode 0  # 0: fps, 1: ms, 2: mb\r\n    @stats.domElement.style.position = 'absolute'\r\n    @stats.domElement.style.left = '0px'\r\n    @stats.domElement.style.top = '0px'\r\n    $(document.body).append @stats.domElement\r\n\r\n    $(window).resize =>\r\n      width = window.innerWidth\r\n      height = window.innerHeight\r\n      @renderer.setSize width, height\r\n      @currentScene.camera.aspect = width / height\r\n      @currentScene.camera.updateProjectionMatrix()\r\n\r\n  animate: ->\r\n    requestAnimationFrame => do @animate\r\n    @stats.begin()\r\n    @renderer.clear()\r\n    @currentScene?.update()\r\n    @stats.end()\r\n\r\n\r\n$ -> do new Main().animate\r\n","\r\nclass Mob extends THREE.Object3D\r\n  constructor: ->\r\n\r\n\r\n  update: ->\r\n    \r\n\r\n\r\n\r\n\r\nmodule.exports = Mob","Input = require './input'\r\nMob = require './mob'\r\nWorld = require './world'\r\n\r\nclass Scene\r\n  constructor: (@renderer, @transit)->\r\n    @clock = new THREE.Clock\r\n    @input = new Input document.body\r\n    @scene = new THREE.Scene\r\n    width = window.innerWidth\r\n    height = window.innerHeight\r\n    @camera = new THREE.PerspectiveCamera 72, width / height, 1, 1000\r\n    #@camera = new THREE.OrthographicCamera width / - 2, width / 2, height / 2, height / - 2, 1, 1000 \r\n  \r\n  update: ->\r\n    @renderer.render @scene, @camera\r\n\r\nclass OrbitScene extends Scene\r\n  constructor: (@renderer, @transit)-> \r\n    super @renderer, @transit\r\n    #@scene.fog = new THREE.Fog 0xffffff, 100, 1000\r\n    @camera.position.z = -50\r\n    @camera.position.x = 50\r\n    @camera.position.y = 100\r\n    @controls = new THREE.OrbitControls @camera\r\n\r\n    @world = new World @scene, 128\r\n    \r\n    #@input.onMouseDown THREE.MOUSE.RIGHT, =>\r\n    #  console.log \"transit PLScene\"\r\n    #  @transit new PLScene @renderer, @transit\r\n\r\n\r\n  update: ->\r\n    @world.update @clock.getDelta()\r\n    @controls.update()\r\n    super()\r\n    \r\n\r\nclass PLScene extends Scene\r\n  constructor: (@renderer, @transit)-> \r\n    super @renderer, @transit\r\n    @camera.position.z = 100\r\n    @controls = new THREE.PointerLockControls @camera\r\n    @scene.add @controls.getObject()\r\n\r\n    geometry = new THREE.BoxGeometry 20, 20, 20\r\n    material = new THREE.MeshBasicMaterial\r\n        color: 0xff0000\r\n        wireframe: true\r\n    @mesh = new THREE.Mesh geometry, material\r\n    @scene.add @mesh\r\n\r\n    @input.onMouseDown THREE.MOUSE.LEFT, =>\r\n      console.log \"poyo\"\r\n      @controls.enabled = true\r\n      unless document.pointerLockElement\r\n        document.body.requestPointerLock()\r\n    \r\n    @input.onDoubleClick =>\r\n      @controls.enabled = false\r\n      if document.pointerLockElement\r\n        document.exitPointerLock()\r\n      console.log \"transit OrbitScene\"\r\n      @transit new OrbitScene @renderer, @transit\r\n      \r\n\r\nmodule.exports = OrbitScene","util = require './util'\r\n\r\nclass Terrain\r\n  constructor: (@size, @seed)->\r\n    @size2 = @size * @size\r\n    @seed ?= util.rand 1000000\r\n    @heightMin = 0\r\n    @heightRange = 128\r\n    @cell = new Uint8Array @size2 * @heightRange\r\n    @generateMesh 32, 0.5, @heightMin, @heightMin + @heightRange - 1\r\n\r\n  getType: (x, y, z)->\r\n    return 0 if x < 0 or x > @size - 1\r\n    return 0 if z < 0 or z > @size - 1\r\n    return 0 if y < @heightMin or y > @heightMin + @heightRange - 1\r\n    @cell[x + z * @size + y * @size2]\r\n\r\n  generateMesh: (inflate, incline, min, max)->\r\n    height = new Int16Array @size * @size\r\n    \r\n    do =>\r\n      hmax = min\r\n      hmin = max\r\n      \r\n      [0...@size2].forEach (v, i)=>\r\n        x = (i % @size + 2) / 2\r\n        z = (((i / @size) | 0) + 3) / 2\r\n        quality = 2  \r\n        [0...4].forEach (u, k)=>\r\n          height[i] += util.noise(x / quality, z / quality, @seed) * quality\r\n          quality *= 4\r\n        height[i] = ~~Math.max min, Math.min(max, height[i] * incline + inflate)\r\n        [0..height[i]].forEach (w, j)=>\r\n          @cell[i + j * @size2] = 1\r\n        hmax = Math.max hmax, height[i]\r\n        hmin = Math.min hmin, height[i]\r\n        \r\n      console.log \"height: [#{hmin}, #{hmax}]\"\r\n\r\n    @geometry = new THREE.BufferGeometry\r\n    @material = new THREE.MeshPhongMaterial\r\n        color: 0x864815\r\n        specular: 0x111111\r\n\r\n    do =>\r\n      faceTemp = [\r\n        [ [0.0, 1.0, 0.0], [0.0, 1.0, 1.0], [1.0, 1.0, 0.0], [1.0, 1.0, 1.0] ],\r\n        [ [0.0, 1.0, 0.0], [0.0, 0.0, 0.0], [0.0, 1.0, 1.0], [0.0, 0.0, 1.0] ],\r\n        [ [1.0, 1.0, 1.0], [1.0, 0.0, 1.0], [1.0, 1.0, 0.0], [1.0, 0.0, 0.0] ],\r\n        [ [1.0, 1.0, 0.0], [1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 0.0] ],\r\n        [ [0.0, 1.0, 1.0], [0.0, 0.0, 1.0], [1.0, 1.0, 1.0], [1.0, 0.0, 1.0] ],\r\n        [ [1.0, 0.0, 1.0], [0.0, 0.0, 1.0], [1.0, 0.0, 0.0], [0.0, 0.0, 0.0] ]\r\n      ]\r\n      indexTemp = [ [0, 1, 2], [2, 1, 3] ]\r\n      dir = [[0,1,0], [-1,0,0], [1,0,0], [0,0,-1], [0,0,1], [0,-1,0]]\r\n\r\n      #compute visible\r\n      faceNum = 0\r\n      do =>\r\n        @cell.forEach (v, i)=>\r\n          return if v is 0\r\n          x = i % @size\r\n          z = ((i % @size2) / @size) | 0\r\n          y = (i / @size2) | 0\r\n          dir.forEach (d)=>\r\n            type = @getType x + d[0], y + d[1], z + d[2]\r\n            if type is 0\r\n              faceNum++\r\n\r\n      console.log \"faceNum: #{faceNum}\"\r\n\r\n      vertices = new Float32Array faceNum * 4 * 3\r\n      indices = new Uint32Array faceNum * 2 * 3\r\n      normals = new Float32Array faceNum * 4 * 3\r\n      colors = new Float32Array faceNum * 4 * 3\r\n      #uvs = new Float32Array faceNum * 4 * 2 \r\n      current = 0\r\n      padding = 0.00001\r\n      \r\n      \r\n      @cell.forEach (v, i)=>\r\n        return if v is 0\r\n        x = i % @size\r\n        z = ((i % @size2) / @size) | 0\r\n        y = (i / @size2) | 0\r\n        dir.forEach (d, face)=>\r\n          type = @getType x + d[0], y + d[1], z + d[2]\r\n          if type is 0\r\n            faceTemp[face].forEach (pos, o)->\r\n              vertices[ current*12 + o*3 + 0 ] = pos[0] + x + (if pos[0] < 0.5 then padding else -padding)\r\n              vertices[ current*12 + o*3 + 1 ] = pos[1] + y + (if pos[1] < 0.5 then padding else -padding)\r\n              vertices[ current*12 + o*3 + 2 ] = pos[2] + z + (if pos[2] < 0.5 then padding else -padding)\r\n    \r\n              normals[ current*12 + o*3 + 0 ] = if face is 1 then -1.0 else (if face is 2 then 1.0 else 0.0)\r\n              normals[ current*12 + o*3 + 1 ] = if face is 5 then -1.0 else (if face is 0 then 1.0 else 0.0)\r\n              normals[ current*12 + o*3 + 2 ] = if face is 3 then -1.0 else (if face is 4 then 1.0 else 0.0)\r\n    \r\n              colors[ current*12 + o*3 + 0 ] = 1.0\r\n              colors[ current*12 + o*3 + 1 ] = 1.0\r\n              colors[ current*12 + o*3 + 2 ] = 1.0\r\n    \r\n              #uvs[ current*8 + o*2 + 0 ] = 0.0\r\n              #uvs[ current*8 + o*2 + 1 ] = 0.0\r\n\r\n            indexTemp.forEach (ind, o)->\r\n              indices[ current*6 + o*3 + 0 ] = ind[0] + current*4\r\n              indices[ current*6 + o*3 + 1 ] = ind[1] + current*4\r\n              indices[ current*6 + o*3 + 2 ] = ind[2] + current*4\r\n\r\n            current++\r\n\r\n      @geometry.addAttribute \"position\", new THREE.BufferAttribute(vertices, 3)\r\n      @geometry.addAttribute \"index\", new THREE.BufferAttribute(indices, 3)\r\n      @geometry.addAttribute \"normal\", new THREE.BufferAttribute(normals, 3)\r\n      @geometry.addAttribute \"color\", new THREE.BufferAttribute(colors, 3)\r\n      #@geometry.addAttribute \"uv\", new THREE.BufferAttribute(uvs, 2)\r\n\r\n    @mesh = new THREE.Mesh @geometry, @material\r\n\r\n\r\n\r\nmodule.exports = Terrain\r\n","class Utility\r\n  @rand = (n)->\r\n    Math.floor Math.random() * n\r\n\r\n  @randf = (n)->\r\n    Math.random() * n\r\n\r\n  @randRange = (min, max)->\r\n    Math.floor(Math.random() * (max - min + 1)) + min\r\n  \r\n  @randArray = (arr)->\r\n    arr[Math.floor Math.random() * arr.length]\r\n\r\n  @noise = do ->\r\n    perlin = new ImprovedNoise\r\n    (x, y, z)-> perlin.noise x, y, z\r\n\r\n\r\nmodule.exports = Utility","Terrain = require './terrain'\r\n\r\nclass World\r\n  constructor: (@scene, @size)->\r\n    @terrain = new Terrain @size\r\n    @scene.add @terrain.mesh\r\n\r\n    @light = new THREE.DirectionalLight 0xffffff, 0.6\r\n    @light.position.set(0.5, 0.7, 0.3).normalize()\r\n    @scene.add @light\r\n\r\n    @light2 = new THREE.HemisphereLight 0xffffff, 0x111111, 0.3\r\n    @scene.add @light2\r\n    \r\n    #@scene.add new THREE.AmbientLight 0x404040\r\n\r\n\r\n  update: (delta)->\r\n\r\n\r\nmodule.exports = World\r\n"]}