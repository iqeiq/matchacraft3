{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/input.coffee","src/main.coffee","src/marching.coffee","src/mob.coffee","src/scene.coffee","src/util.coffee"],"names":[],"mappings":"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","file":"bundle.js","sourceRoot":"./src","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","class Input\r\n  constructor: (@domElement = document)->\r\n    @keys = {}\r\n    @listener = {}\r\n\r\n    @keyMap =\r\n      8: 'backspace'\r\n      13: 'enter'\r\n      16: 'shift'\r\n      17: 'ctrl'\r\n      18: 'alt'\r\n      27: 'esc'\r\n      32: 'space'\r\n      37: 'left'\r\n      38: 'up'\r\n      39: 'right'\r\n      40: 'down'\r\n\r\n    mapper = (keycode, status)=>\r\n      key: @keyMap[keycode] or String.fromCharCode(keycode).toLowerCase()\r\n      status: status\r\n\r\n    keydown = Bacon.fromEventTarget(@domElement, 'keydown').map (e)=> mapper.call @, e.keyCode, true\r\n    keyup = Bacon.fromEventTarget(@domElement, 'keyup').map (e)=> mapper.call @, e.keyCode, false\r\n    keydown.merge(keyup).filter (e)->\r\n      code = e.key.charCodeAt 0\r\n      47 < code < 58 or 96 < code < 123\r\n    .onValue (e)=>\r\n      @keys[e.key] = e.status\r\n      return unless e.status \r\n      @listener[e.key]?.forEach (v)-> do v\r\n\r\n    buttons = [THREE.MOUSE.LEFT, THREE.MOUSE.RIGHT]\r\n    \r\n    mouseEvent = (type)=>\r\n      listener = {}\r\n      buttons.forEach (e)-> listener[e] = []\r\n      Bacon.fromEventTarget @domElement, type\r\n        .filter (e)-> e.button in buttons\r\n        .onValue (e)-> listener[e.button].forEach (v)-> v e.clientX, e.clientY\r\n      [ \r\n        (btn, cb)-> listener[btn]?.push cb,\r\n        (btn, cb)-> _.remove listener[btn], (v)-> if cb? then v is cb else true\r\n      ]\r\n\r\n    [@onMouseDown, @offMouseDown] = mouseEvent 'mousedown'\r\n    [@onMouseUp, @offMouseUp] = mouseEvent 'mouseup'\r\n    [@onDoubleClick, @offDoubleClick] = _.transform mouseEvent('dblclick'), (res, e)-> res.push e.bind @, THREE.MOUSE.LEFT\r\n\r\n    [@onMouseMove, @offMouseMove] = do =>\r\n      listener = {}\r\n      active = {}\r\n      buttons.forEach (e)-> \r\n        active[e] = false\r\n        listener[e] = []\r\n      md = Bacon.fromEventTarget(@domElement, 'mousedown').map (e)-> [e.button, true]\r\n      mu = Bacon.fromEventTarget(@domElement, 'mouseup').map (e)-> [e.button, false]\r\n      md.merge(mu).onValue (e)-> active[e[0]] = e[1] if active[e[0]]?\r\n      Bacon.fromEventTarget(@domElement, 'mousemove').onValue (e)->\r\n        for own k, v of listener\r\n          v.forEach (u)-> u e.clientX, e.clientY if active[k] \r\n      [\r\n        (btn, cb)-> listener[btn]?.push cb,\r\n        (btn, cb)-> _.remove listener[btn], (v)-> if cb? then v is cb else true\r\n      ]\r\n\r\n    @offAll = =>\r\n      buttons.forEach (v)=>\r\n        @offMouseDown v\r\n        @offMouseUp v\r\n        @offMouseMove v\r\n      @offDoubleClick()\r\n      @off k for own k, v of @listener\r\n        \r\n\r\n  on: (key, cb)->\r\n    return @listener[key].push cb if @listener[key]\r\n    @listener[key] = [cb]\r\n\r\n  off: (key, cb = allremove)->\r\n    _.remove @listener[key], (v)-> v is cb\r\n\r\n\r\nmodule.exports = Input","'use strict'\r\n\r\nScene = require './scene'\r\n\r\n\r\nclass Main\r\n  constructor: -> \r\n    Detector.addGetWebGLMessage() unless Detector.webgl\r\n\r\n    @renderer = new THREE.WebGLRenderer\r\n        alpha: true\r\n        antialiasing: true\r\n    @renderer.setSize window.innerWidth, window.innerHeight\r\n    @renderer.setClearColor 0xa0d8ef, 1\r\n    @renderer.autoClear = false\r\n    @renderer.sortObjects = true\r\n    $('#world').append @renderer.domElement\r\n\r\n    @currentScene = undefined\r\n    transit = (s)=>\r\n      @currentScene.input.offAll()\r\n      @currentScene = s\r\n\r\n    @currentScene = new Scene @renderer, transit\r\n    \r\n    @stats = new Stats\r\n    @stats.setMode 0  # 0: fps, 1: ms, 2: mb\r\n    @stats.domElement.style.position = 'absolute'\r\n    @stats.domElement.style.left = '0px'\r\n    @stats.domElement.style.top = '0px'\r\n    $(document.body).append @stats.domElement\r\n\r\n    $(window).resize =>\r\n      width = window.innerWidth\r\n      height = window.innerHeight\r\n      @renderer.setSize width, height\r\n      @currentScene.camera.aspect = width / height\r\n      @currentScene.camera.updateProjectionMatrix()\r\n\r\n  animate: ->\r\n    requestAnimationFrame => do @animate\r\n    @stats.begin()\r\n    @renderer.clear()\r\n    @currentScene?.update()\r\n    @stats.end()\r\n\r\n\r\n$ -> do new Main().animate\r\n","util = require './util'\r\n\r\nclass Marching\r\n  constructor: (@SIZE, isolevel, generator)->\r\n    points = []\r\n    values = []\r\n    \r\n    [0...@SIZE].forEach (z)=>\r\n      [0...@SIZE].forEach (y)=>\r\n        [0...@SIZE].forEach (x)=>\r\n          points.push new THREE.Vector3(x, y, z)\r\n          value = generator x, y, z\r\n          values.push value\r\n   \r\n    size2 = @SIZE * @SIZE\r\n    vlist = new Array 12\r\n    geometry = new THREE.Geometry()\r\n    vertexIndex = 0\r\n  \r\n    [0...@SIZE-1].forEach (z)=>\r\n      [0...@SIZE-1].forEach (y)=>\r\n        [0...@SIZE-1].forEach (x)=>\r\n          p     = x   + @SIZE * y + size2 * z\r\n          px    = p   + 1\r\n          py    = p   + @SIZE\r\n          pxy   = py  + 1\r\n          pz    = p   + size2\r\n          pxz   = px  + size2\r\n          pyz   = py  + size2\r\n          pxyz  = pxy + size2\r\n    \r\n          value0 = values[p]\r\n          value1 = values[px]\r\n          value2 = values[py]\r\n          value3 = values[pxy]\r\n          value4 = values[pz]\r\n          value5 = values[pxz]\r\n          value6 = values[pyz]\r\n          value7 = values[pxyz]\r\n    \r\n          cubeindex = 0\r\n          cubeindex |= 1    if value0 < isolevel\r\n          cubeindex |= 2    if value1 < isolevel\r\n          cubeindex |= 8    if value2 < isolevel\r\n          cubeindex |= 4    if value3 < isolevel\r\n          cubeindex |= 16   if value4 < isolevel\r\n          cubeindex |= 32   if value5 < isolevel\r\n          cubeindex |= 128  if value6 < isolevel\r\n          cubeindex |= 64   if value7 < isolevel\r\n    \r\n          bits = MARCH.edgeTable[cubeindex]\r\n    \r\n          return if bits is 0\r\n    \r\n          mu = 0.5 \r\n\r\n          vl = (v1, v2)->\r\n            eps = 0.00001\r\n            return 0 if Math.abs(isolevel - v1) < eps\r\n            return 1 if Math.abs(isolevel - v2) < eps\r\n            return 0 if Math.abs(v1 - v2) < eps\r\n            (isolevel - v1) / (v2 - v1) \r\n\r\n    \r\n          if bits & 1\r\n            mu = vl value0, value1\r\n            vlist[0] = points[p].clone().lerp points[px], mu\r\n          if bits & 2\r\n            mu = vl value1, value3\r\n            vlist[1] = points[px].clone().lerp points[pxy], mu\r\n          if bits & 4\r\n            mu = vl value2, value3\r\n            vlist[2] = points[py].clone().lerp points[pxy], mu\r\n          if bits & 8\r\n            mu = vl value0, value2\r\n            vlist[3] = points[p].clone().lerp points[py], mu\r\n          if bits & 16\r\n            mu = vl value4, value5\r\n            vlist[4] = points[pz].clone().lerp points[pxz], mu\r\n          if bits & 32\r\n            mu = vl value5, value7\r\n            vlist[5] = points[pxz].clone().lerp points[pxyz], mu\r\n          if bits & 64\r\n            mu = vl value6, value7\r\n            vlist[6] = points[pyz].clone().lerp points[pxyz], mu\r\n          if bits & 128\r\n            mu = vl value4, value6\r\n            vlist[7] = points[pz].clone().lerp points[pyz], mu\r\n          if bits & 256\r\n            mu = vl value0, value4\r\n            vlist[8] = points[p].clone().lerp points[pz], mu\r\n          if bits & 512\r\n            mu = vl value1, value5\r\n            vlist[9] = points[px].clone().lerp points[pxz], mu\r\n          if bits & 1024\r\n            mu = vl value3, value7\r\n            vlist[10] = points[pxy].clone().lerp points[pxyz], mu \r\n          if bits & 2048 \r\n            mu = vl value2, value6\r\n            vlist[11] = points[py].clone().lerp points[pyz], mu\r\n          \r\n          i = 0\r\n          cubeindex <<= 4\r\n          \r\n          until MARCH.triTable[cubeindex + i] is -1 \r\n            index1 = MARCH.triTable[cubeindex + i]\r\n            index2 = MARCH.triTable[cubeindex + i + 1]\r\n            index3 = MARCH.triTable[cubeindex + i + 2]\r\n            \r\n            geometry.vertices.push vlist[index1].clone()\r\n            geometry.vertices.push vlist[index2].clone()\r\n            geometry.vertices.push vlist[index3].clone()\r\n            face = new THREE.Face3 vertexIndex, vertexIndex + 1, vertexIndex + 2\r\n            face.color = new THREE.Color(0, 0.5 + util.randf(0.5), 0)\r\n            #face.vertexColors[0] = new THREE.Color 0x000ff\r\n            #face.vertexColors[1] = new THREE.Color 0x00ff00\r\n            #face.vertexColors[2] = new THREE.Color 0x0000ff\r\n            geometry.faces.push face\r\n            geometry.faceVertexUvs[0].push [new THREE.Vector2(0, 0), new THREE.Vector2(0, 1), new THREE.Vector2(1, 1)]\r\n            vertexIndex += 3\r\n            i += 3\r\n    \r\n    geometry.computeFaceNormals()\r\n    geometry.computeVertexNormals()\r\n    geometry.computeBoundingSphere()\r\n\r\n    material = new THREE.MeshLambertMaterial\r\n        vertexColors: THREE.VertexColors\r\n    @mesh = new THREE.Mesh geometry, material\r\n\r\n\r\nmodule.exports = Marching\r\n","class Mob\r\n  constructor: ->\r\n\r\n\r\n  update: ->\r\n    \r\n\r\n\r\n\r\n\r\nmodule.exports = Mob","util = require './util'\r\nInput = require './input'\r\nMob = require './mob'\r\nMarching = require './marching'\r\n\r\nclass Scene\r\n  constructor: (@renderer, @transit)->\r\n    @clock = new THREE.Clock\r\n    @input = new Input document.body\r\n    @scene = new THREE.Scene\r\n    @camera = new THREE.PerspectiveCamera 72, window.innerWidth / window.innerHeight, 1, 1000\r\n    \r\n  update: ->\r\n    @renderer.render @scene, @camera\r\n\r\nclass OrbitScene extends Scene\r\n  constructor: (@renderer, @transit)-> \r\n    super @renderer, @transit\r\n    #@scene.fog = new THREE.Fog 0xffffff, 100, 1000\r\n    @camera.position.z = 100\r\n    @controls = new THREE.OrbitControls @camera\r\n\r\n    hash = util.rand 1000000\r\n    console.log \"seed: #{hash}\"\r\n    hash = 342468\r\n\r\n    @SIZE = 32\r\n    height = []\r\n    hmax = 0\r\n    hmin = @SIZE - 1\r\n\r\n    do =>\r\n      size = @SIZE * @SIZE\r\n      quality = 2\r\n\r\n      [0...size].forEach (i)-> height.push 0\r\n\r\n      [0...4].forEach (k)=>\r\n        [0...size].forEach (i)=>\r\n          x = i % @SIZE\r\n          z = (i / @SIZE) | 0\r\n          x = (x + 2) / 2\r\n          z = (z + 3) / 2\r\n          height[i] += util.noise(x / quality, z / quality, hash) * quality\r\n        quality *= 4\r\n\r\n      [0...size].forEach (i)=> \r\n        height[i] *= 0.5\r\n        height[i] += @SIZE / 2\r\n        console.log height[i] = 0 if height[i] < 0\r\n        console.log height[i] = @SIZE - 1 if height[i] > @SIZE - 1\r\n        hmax = Math.max height[i], hmax\r\n        hmin = Math.min height[i], hmin\r\n\r\n      console.log \"height: [#{hmin}, #{hmax}]\"\r\n\r\n    @march = new Marching @SIZE, 0.0001, (x, y, z)=>\r\n      h = height[z * @SIZE + x]\r\n      v = if h < y then 0  else 1 \r\n    @scene.add @march.mesh\r\n\r\n\r\n    bgeometry = new THREE.BoxGeometry @SIZE, hmax - hmin, @SIZE\r\n    bmaterial = new THREE.MeshBasicMaterial\r\n        color: 0x00ffff\r\n        wireframe: true\r\n    bmesh = new THREE.Mesh bgeometry, bmaterial\r\n    @scene.add bmesh\r\n    bmesh.position.set @SIZE / 2, (hmax + hmin) / 2, @SIZE / 2\r\n    \r\n    @light = new THREE.DirectionalLight 0xffffff, 0.7\r\n    @light.position.set(0.5, 0.7, 0.3).normalize()\r\n    @scene.add @light\r\n\r\n    #@light2 = new THREE.HemisphereLight 0xffffff, 0x111111, 0.1\r\n    #@scene.add @light2\r\n    \r\n    @scene.add new THREE.AmbientLight 0x202020\r\n\r\n    #@input.onMouseDown THREE.MOUSE.RIGHT, =>\r\n    #  console.log \"transit PLScene\"\r\n    #  @transit new PLScene @renderer, @transit\r\n\r\n\r\n  update: ->\r\n    @controls.update()\r\n    super()\r\n    \r\n\r\nclass PLScene extends Scene\r\n  constructor: (@renderer, @transit)-> \r\n    super @renderer, @transit\r\n    @camera.position.z = 100\r\n    @controls = new THREE.PointerLockControls @camera\r\n    @scene.add @controls.getObject()\r\n\r\n    geometry = new THREE.BoxGeometry 20, 20, 20\r\n    material = new THREE.MeshBasicMaterial\r\n        color: 0xff0000\r\n        wireframe: true\r\n    @mesh = new THREE.Mesh geometry, material\r\n    @scene.add @mesh\r\n\r\n    @input.onMouseDown THREE.MOUSE.LEFT, =>\r\n      console.log \"poyo\"\r\n      @controls.enabled = true\r\n      unless document.pointerLockElement\r\n        document.body.requestPointerLock()\r\n    \r\n    @input.onDoubleClick =>\r\n      @controls.enabled = false\r\n      if document.pointerLockElement\r\n        document.exitPointerLock()\r\n      console.log \"transit OrbitScene\"\r\n      @transit new OrbitScene @renderer, @transit\r\n      \r\n\r\nmodule.exports = OrbitScene","class Utility\r\n  @rand = (n)->\r\n    Math.floor Math.random() * n\r\n\r\n  @randf = (n)->\r\n    Math.random() * n\r\n\r\n  @randRange = (min, max)->\r\n    Math.floor(Math.random() * (max - min + 1)) + min\r\n  \r\n  @randArray = (arr)->\r\n    arr[Math.floor Math.random() * arr.length]\r\n\r\n  @noise = do ->\r\n    perlin = new ImprovedNoise\r\n    (x, y, z)-> perlin.noise x, y, z\r\n\r\n\r\nmodule.exports = Utility"]}